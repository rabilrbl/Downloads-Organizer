name: Go Build and Release

on: 
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: 'Provide a version number to release.'
        required: true
      changelog:
        type: string
        description: 'Provide a changelog for the release.'
        default: "No changelog provided."
      draft:
        type: boolean
        description: 'Create a draft release.'
        default: false
      prerelease:
        type: boolean
        description: 'Pre-release?'
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
      - name: Build Executables 🗄️ 🔃
        run: |
            for var in $(go tool dist list); do
              case "$(cut -d '/' -f 1 <<<$var)" in
                  "windows")
                      echo "Building $var"
                      GOOS="$(cut -d '/' -f 1 <<<$var)" GOARCH="$(cut -d '/' -f 2 <<<$var)" go build -ldflags -H=windowsgui -o ./bin/"Downloads-Organizer-$(cut -d '/' -f 1 <<<$var)-$(cut -d '/' -f 2 <<<$var).exe" || true
                    ;;
                    "linux" | "darwin")
                      echo "Building $var"
                      GOOS="$(cut -d '/' -f 1 <<<$var)" GOARCH="$(cut -d '/' -f 2 <<<$var)" go build -o ./bin/"Downloads-Organizer-$(cut -d '/' -f 1 <<<$var)-$(cut -d '/' -f 2 <<<$var)" || true
                    ;;
                    *)
                      echo "Skipping OS: $(cut -d '/' -f 1 <<<$var)"
                    ;;
              esac
            done
        continue-on-error: true
      - name: Release 📦
        uses: softprops/action-gh-release@v1
        with:
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          body: ${{ github.event.inputs.changelog }}
          tag_name: ${{ github.event.inputs.version }}
          files: |
            ./bin/*
        env:
          GITHUB_TOKEN: ${{ github.token }}
      
