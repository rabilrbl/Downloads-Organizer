on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
      - name: GOOO
        run: |
          go version
          export GO_BUILD_ARCHS_JSON=$(go tool dist list -json)
      - name: build artifacts
        run: |
            GOOS=windows GOARCH=amd64 go build -ldflags -H=windowsgui -o ./bin/Downloads-Organizer-x64.exe
            GOOS=windows GOARCH=386 go build -ldflags -H=windowsgui -o ./bin/Downloads-Organizer-x86.exe
            GOOS=linux GOARCH=amd64 go build -o ./bin/Downloads-Organizer-Linux-x86_64
            GOOS=darwin GOARCH=amd64 go build -o ./bin/Downloads-Organizer-Darwin-x86_64
            GOOS=linux GOARCH=arm64 go build -o ./bin/Downloads-Organizer-Linux-aarch64
            GOOS=darwin GOARCH=arm64 go build -o ./bin/Downloads-Organizer-Darwin-aarch64
            GOOS=linux GOARCH=386 go build -o ./bin/Downloads-Organizer-Linux-x86
      - name: version
        run: echo "::set-output name=version::v$(date "+%d-%m-%y-%H%M%S")"
        id: version
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          files: |
            ./bin/Downloads-Organizer-x64.exe
            ./bin/Downloads-Organizer-x86.exe
            ./bin/Downloads-Organizer-Linux-x86_64
            ./bin/Downloads-Organizer-Darwin-x86_64
            ./bin/Downloads-Organizer-Linux-aarch64
            ./bin/Downloads-Organizer-Darwin-aarch64
            ./bin/Downloads-Organizer-Linux-x86
        env:
          GITHUB_TOKEN: ${{ github.token }}
      
