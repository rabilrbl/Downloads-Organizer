on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
      - name: Build Executables 🗄️ 🔃
        run: |
            for var in $(go tool dist list); do
              case "$(cut -d '/' -f 1 <<<$var)" in
                  "windows")
                      echo "Building $var"
                      GOOS="$(cut -d '/' -f 1 <<<$var)" GOARCH="$(cut -d '/' -f 2 <<<$var)" go build -ldflags -H=windowsgui -o ./bin/"$(cut -d '/' -f 1 <<<$var)-$(cut -d '/' -f 2 <<<$var).exe" || true
                    ;;
                    "linux" | "darwin")
                      echo "Building $var"
                      GOOS="$(cut -d '/' -f 1 <<<$var)" GOARCH="$(cut -d '/' -f 2 <<<$var)" go build -o ./bin/"$(cut -d '/' -f 1 <<<$var)-$(cut -d '/' -f 2 <<<$var)" || true
                    ;;
                    *)
                      echo "Skipping OS: $(cut -d '/' -f 1 <<<$var)"
                    ;;
              esac
            done
        continue-on-error: true
      - name: Version 🔢
        run: echo "::set-output name=version::$(cat .version)"
        id: version
      - name: Release 📦
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          tag_name: ${{ steps.version.outputs.version }}
          files: |
            ./bin/*
        env:
          GITHUB_TOKEN: ${{ github.token }}
      
