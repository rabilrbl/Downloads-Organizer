on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
      - name: GOOO
        run: |
          go version
          export GO_BUILD_ARCHS_JSON=$(go tool dist list -json)
      - name: build artifacts
        run: |
            GOOS=windows GOARCH=amd64 go build -ldflags -H=windowsgui -o ./bin/Downloads-Organizer.exe
            GOOS=linux GOARCH=amd64 go build -o ./bin/Downloads-Organizer
      - name: version
        run: echo "::set-output name=version::v$(date "+%d-%m-%y-%H%M%S")"
        id: version
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: version-${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Downloads-Organizer.exe
          asset_name: Downloads-Organizer.exe
          asset_content_type: application/x-ms-dos-executable
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Downloads-Organizer
          asset_name: Downloads-Organizer
          asset_content_type: application/x-executable
